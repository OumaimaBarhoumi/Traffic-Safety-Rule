ArchiveEntry "Head-on"

Definitions
  Real m1;
  Real m2;
  Real Maxi;
  Real Mini;
  
End.

ProgramVariables
  Real A;
  Real B;
  Real b1;
  Real b2;
  Real b3;
  Real b;
  Real c;
  Real r2;
  Real r1;
  Real rd;
  Real phi2;
  Real phi1;
  Real deltav;
  Real deltavp;
  Real deltav1;
  Real deltav2;
  Real vpost;
  Real TTC;
  Real v1;
  Real v2;
  Real v0;
  Real x1;
  Real x2;
  Real a1;
  Real a2;
  Real J1;
  Real J2;
  Real L;
End.

Problem
    TTC <= 3 & deltavp < deltav & J2 > -Maxi | J2 < -Mini & J1 > -Maxi | J1 < -Mini & r1 = 0 & r2 = 0 -> x2 = x1 & !x2 = x1 & B > 0 & b > 0 & B > b3 & c > 0
	& TTC >= 0 & Maxi = 9.9 & Mini = 15 & v1 >= 0 & b1 > 0 & b2 > 0 & b3 > 0 
	& b3 > b2 & b2 > b1 & b1 > b & A>0 & TTC = x1 - x2 / v1 + v2
	& v0 >= 0 & v2 >= 0 & v2 > v1  & vpost >= 0 & m1 > 0 & m2 > 0 & L > 0
-> 
[ 
    {    
       {    v1 := v0 - a1 * TTC ;
            v2 := v0 - a2 * TTC ;
            vpost := m1 * v1 + m2 * v2 / m1 + m2 ;
            deltav1 := vpost - v1;
            deltav2 := vpost - v2 ;
            deltav := max(deltav1,deltav2); phi1 := x1/ rd; phi2 := x2/ rd;
				?TTC <= 3;
				?v1 >= 0 & v1 <= 20 & v2 >= 0 & v2 <= 20;
				a2 := b;
				a1 := b;
				deltav2 := vpost - v2;
				deltav1 := vpost - v1;
				deltavp := max(deltav1,deltav2);
				?deltavp < deltav;
			    ?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini;
				?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
				
				++ ?v1 > 20 & v1 <= 40 & v2 >= 0 & v2 <= 20;
					a2 := b;
					a1 := b1;
					deltav2 := vpost - v2;
					deltav1 := vpost - v1;
					deltavp := max(deltav1,deltav2);
					?deltavp < deltav;
					?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
                	?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;

				++ ?v1 > 40 & v1 <= 60 & v2 >= 0 & v2 <= 20;
					a2 := b;
					a1 := b2;
					deltav2 := vpost - v2;
					deltav1 := vpost - v1;
					deltavp := max(deltav1,deltav2);
					?deltavp < deltav;
                	?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
			
					++ ?v1 > 60 & v1 <= 80 & v2 >= 0 & v2 <= 20; 
						a2 := b;
						a1 := b3;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;

					++ ?v1 > 80 & v2 >= 0 & v2 <= 20; 
						a2 := b;
						a1 := B;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
						
					++ ?v1 > 20 & v1 <= 40 & v2 > 20 & v2 <= 40; 
						a2 := b1;
						a1 := b1;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
						
					++ ?v1 > 40 & v1 <= 60 & v2 > 20 & v2 <= 40; 
						a2 := b1;
						a1 := b2;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
						
					++ ?v1 > 60 & v1 <= 80 & v2 > 20 & v2 <= 40; 
						a2 := b1;
						a1 := b3;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
									
					++ ?v1 > 80 & v2 > 20 & v2 <= 40; 
						a2 := b1;
						a1 := B;
						deltav2 := vpost - v2;
						deltav1 := vpost - v1;
						deltavp := max(deltav1,deltav2);
						?deltavp < deltav;
						?J1 < -Maxi & J1 > -Mini & J2 < -Maxi & J2 > -Mini & r1 != 0 & r2 != 0;
						?r1 > 0 & r1 <= 0.785 & r2 > 0 & r2 <= 0.785;
       }
		{x1' = v1, v1' = a1, a1' = J1, x2' = v2, v2' = a2, a2' = J2, phi1' = r1, phi2' = r2} 
    }*
] TTC <= 3 & deltavp < deltav & J2 > -Maxi | J2 < -Mini & J1 > -Maxi | J1 < -Mini & r1 = 0 & r2 = 0 -> x2 = x1

End.

/* Optional tactic to prove the problem "TTC <= 3 & deltavp < deltav & J2 > -Maxi | J2 < -Mini & r2 = 0 ->" */
/*
Tactic "Proof"
implyR'R=="px->[system{|^@|};]leqx,any";
expand "system";
loop"leqx,two", 'R=="[{increment{|^@|};ode{|^@|};}*]leqx,any"; <
  "Init":
    propClose,
  "Post":
    QE,
  "Step":
    composeb'R=="[increment{|^@|};ode{|^@|};]x<=2";
    expandAllDefs;
    unfold;
    ODE'R=="[{x'=x^2&x<=2}]x<=2"

End.
*/
End.